import { Conversion } from "./types/interfaces";
import { NumberLike } from "./types/types";
declare function uBinToOct(binary: NumberLike): Conversion;
declare function uBinToDec(binary: NumberLike): Conversion;
declare function uBinToHex(binary: NumberLike): Conversion;
declare function uOctToBin(octal: NumberLike): Conversion;
declare function uOctToDec(octal: NumberLike): Conversion;
declare function uOctToHex(octal: NumberLike): Conversion;
declare function uDecToBin(decimal: NumberLike): Conversion;
declare function uDecToOct(decimal: NumberLike): Conversion;
declare function uDecToHex(decimal: NumberLike): Conversion;
declare function uHexToBin(hexadecimal: NumberLike): Conversion;
declare function uHexToDec(hexadecimal: NumberLike): Conversion;
declare function uHexToOct(hexadecimal: NumberLike): Conversion;
declare function sBinToOct(binary: NumberLike, _bits: number): Conversion;
declare function sBinToDec(binary: NumberLike, _bits: number): Conversion;
declare function sBinToHex(binary: NumberLike, _bits: number): Conversion;
declare function sOctToBin(octal: NumberLike, bits: number): Conversion;
declare function sOctToDec(octal: NumberLike, bits: number): Conversion;
declare function sOctToHex(octal: NumberLike, bits: number): Conversion;
declare function sDecToBin(decimal: NumberLike, bits: number): Conversion;
declare function sDecToOct(decimal: NumberLike, bits: number): Conversion;
declare function sDecToHex(decimal: NumberLike, bits: number): Conversion;
declare function sHexToBin(hexadecimal: NumberLike, bits: number): Conversion;
declare function sHexToOct(hexadecimal: NumberLike, bits: number): Conversion;
declare function sHexToDec(hexadecimal: NumberLike, bits: number): Conversion;
export { sBinToDec, sBinToHex, sBinToOct, sDecToBin, sDecToHex, sDecToOct, sHexToBin, sHexToDec, sHexToOct, sOctToBin, sOctToDec, sOctToHex, uBinToDec, uBinToHex, uBinToOct, uDecToBin, uDecToHex, uDecToOct, uHexToBin, uHexToDec, uHexToOct, uOctToBin, uOctToDec, uOctToHex };
